# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - if [ -n "$PACKAGES" ]; then sudo apt-get update; fi
  - if [ -n "$PACKAGES" ]; then sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi
  - mkdir -p depends/SDKs depends/sdk-sources out
  - sudo apt-get -y install libsecp256k1-0
  - sudo add-apt-repository -y ppa:luke-jr/bitcoincore

test:
  script:
    - pip install tox flake8 .[tests] electrumx
    - tox -e py36,flake8
variables:
    PACKAGES: "bitcoind"

run:
  script:
    - sudo docker run --name electrum-wine-builder-cont -v $PWD:/opt/wine64/drive_c/electrum --rm --workdir /opt/wine64/drive_c/electrum/contrib/build-wine electrum-wine-builder-img ./build.sh
    - pip install dist/*
    # run the command here
  artifacts:
    paths:
      - dist/*.whl
.job_template: &win64_definition
  tags:
    - windows
  variables:
    HOST: "x86_64-w64-mingw32"
    GOAL: "install"
    OUTDIR: "Crown-${RELEASE_VERSION}-Win64"
    PACKAGES: "nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 wine1.6 bc"

pages:
  script:
    - pip install sphinx sphinx-rtd-theme
    - cd doc ; make html
    - mv build/html/ ../public/
  artifacts:
    paths:
      - public
  only:
    - master
